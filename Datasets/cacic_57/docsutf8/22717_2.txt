Análisis de requerimientos de un sistema multigente de robots que juegan al fútbol
﻿
El objetivo del Grupo de Investigación en “Robótica Inteligente”, es promover el estudio de áreas de Inteligencia
Artificial a través del fútbol con robots. En la búsqueda de una metodología de análisis y diseño de sistemas
multiagentes hemos hallado a Gaia. La metodología Gaia ha sido pensada para sistemas multiagentes como
organizaciones computacionales que consisten de varios roles que interactúan. El objetivo de este artículo es
presentar el uso de la metodología Gaia describiendo el análisis y diseño de un equipo de fútbol de robots.
Palabras claves: Sistemas Multiagente, Fútbol con Robots, Gaia.
*Este trabajo está parcialmente financiado por la Universidad Nacional del Comahue, en el contexto del Proyecto de Investigación “Técnicas de Inteligencia Computacional para el diseño e implementación de Sistemas Multiagentes”(04/E062), el Grupo de Investigación en Robótica Inteligente y por el convenio de trabajo conjunto con la Universidad Politécnica de Madrid.
1587
1. INTRODUCCIÓN
El fútbol con robots ha sido recientemente catalogado como un problema estándar para la investigación en Inteligencia Artificial y Robótica. Un problema estándar provoca que gran cantidad de
investigadores se enfoquen sobre los mismos temas, de forma tal que, aunando esfuerzos el avance
sea mucho mayor que si cada uno trabajara en temas no relacionados.
El fútbol con robots fue elegido para encontrar necesidades complejas del mundo real, a través de un
mundo limitado, que tiene problemas manejables en tamaño y costos de investigación. El problema
es atractivo porque ofrece una integración de áreas de Inteligencia Artificial y Robótica. Tales áreas
incluyen: comportamiento reactivo, adquisición de estrategias, aprendizaje (learning), planeamiento
(planning) en tiempo real, sistemas multiagentes, reconocimiento del ambiente, visión, control de
motores, control de robot inteligentes, entre otros [4].
Trabajar con robots que jueguen al fútbol, es interesante, por lo que este juego representa a nivel
mundial. El fútbol es idioma universal, sus reglas son de conocimiento común y es el deporte más
popular en la mayoría de los países. Esta característica hace al problema del fútbol con robots mucho
más atractivo para incentivar estudiantes, investigadores, sponsors y a la sociedad en su conjunto.
En todo proceso de desarrollo de software, se utilizan metodologías. Se han evaluado varias metodologías [7] y hemos seleccionado Gaia[9]. Esta metodología fue pensada para construir sistemas multiagentes, por esta razón es útil para el sistema en cuestión: “un equipo”.
En la recopilación de artículos sobre Gaia se ha observado la falta de ejemplos de uso de la metodología.
Con esta motivación, el presente trabajo describe la metodología Gaia realizando el análisis y diseño
de un equipo de fútbol con robots.
El trabajo está estructurado de la siguiente manera. A continuación, se describe la metodología y en
la tercera sección realizamos una descripción del dominio de trabajo. En las secciones 4 y 5 se realiza el análisis y diseño del equipo de fútbol con robots. Finalmente, en la sección 6 se presentan las
conclusiones y se analizan futuros trabajos.
2. DESCRIPCIÓN DE LA METODOLOGÍA UTILIZADA
Los agentes se están convirtiendo en uno de los principales paradigmas de las ciencias de la computación. Esto promueve el desarrollo de técnicas y metodologías de ingeniería de software específicamente pensadas para la construcción agentes. Gaia es presentada por Michael Wooldrige[9], como
una metodología para análisis de requerimientos y diseño de sistemas multiagentes, desarrollada para
dominios con las siguientes características:
1. Los agentes son parte central del sistema.
2. Los agentes son heterogéneos. Diferentes agentes pueden ser implementados utilizando diferentes lenguajes de programación, arquitecturas y técnicas. La metodología no hace referencia
alguna acerca de la plataforma de implementación.
3. La estructura de organización del sistema es estática, las relaciones entre los agentes no cambian
en tiempo de ejecución.
4. Las habilidades de los agentes y los servicios que realizan son estáticos, no cambian en tiempo
de ejecución.
5. Hay un número manejable de agentes (menos de 100).
1588
Los puntos 4 y 5 restringen la metodología a sistemas con agentes que no evolucionen en su comportamiento y en la interacción con otros agentes. Este punto no impide que sistemas con aprendizaje
(learning) puedan utilizar la metodología, lo que ocurre es que en una etapa de análisis se observan
características del momento en que se elicitan los requerimientos y no se observan los posibles aprendizajes o evoluciones futuras.
2.1. Framework
Gaia es un proceso sistemático que, partiendo desde sentencias de requerimientos, arriba a un
diseño que está lo suficientemente detallado como para ser implementado directamente. El esquema
de módulos de la metodología se observa en la Figura 1.
Figura 1: Módulos de la metodologia Gaia
El análisis y diseño deben ser considerados como un proceso que incrementa el nivel de detalle de
los modelos del sistema a ser construido. Los principales conceptos de la metodología están divididos
en dos categorías: abstractos y concretos (Cuadro 1). Entidades abstractas son utilizadas durante la
etapa de análisis para conceptos del sistema, pero no necesariamente tienen relación directa con el
sistema en tiempo de ejecución. En contraste, entidades concretas son utilizadas durante el proceso
de diseño y comúnmente tienen relación directa con el sistema en funcionamiento.
Conceptos Abstractos Conceptos Concretos
Roles Tipos de agentes
Permisos Servicios
Responsabilidades Comunicación
Protocolos
Actividades
Propiedades livianas
Propiedades seguras
Cuadro 1: Comparación entre conceptos abstractos y concretos de la metodología de análisis y diseño
Gaia.
1589
3. DESCRIPCIÓN DEL DOMINIO
El proceso Gaia comienza por sentencias de requerimientos, las cuales conforman una descripción
del sistema a construir. El proceso de definición de los requerimientos del sistema es una tarea ardua
y para muchos nada agradable. Con el fin de ofrecer una buena base para la construcción del sistema,
los requerimientos deben ser escritos de forma clara y no ambigua. Además, deben ser rastreables,
correctos y completos. Una pobre especificación hace que el proceso de construcción tarde más de lo
esperado, por no anticiparse a situaciones del sistema. El tiempo dedicado a la etapa de análisis de
requerimientos es insignificante en comparación con el resto de las etapas de la construcción, por lo
cual hay que darle la importancia que se merece.
La descripción del dominio trata de abstraerse de la plataforma y tipo de robots, pero para cuestiones específicas, como cantidad y forma de los robots, nos hemos basado en el ambiente simulado
Simurosot de la competencia FIRA[2].
El problema a solucionar es un equipo de fútbol con robots. Los robots deben funcionar de manera
autónoma en partidos de fútbol contra otros equipos.
En las competencias que nos interesan, los agentes robóticos son cubos de tamaños variados con dos
ruedas. Las canchas sobre las que se juegan los partidos son del tamaño de una mesa de ping-pong y
se juega con pelotitas de golf.
Cada robot, por medio de sus dos ruedas, realiza todos los movimientos posibles. Si las dos ruedas
van a la misma velocidad, hacia delante o hacia atrás, los robots se mueven linealmente; si las velocidades de las ruedas varían, los robot se mueven describiendo un arco, o girando en el lugar, si una
de las ruedas está parada. Las velocidades son primitivas que están relacionadas con el ambiente y el
tipo de robot. Como el objetivo es abstraer el diseño del agente lógico, se trabajará sobre acciones de
mayor nivel como ir a una determinada posición.
Los agentes robóticos perciben del ambiente a través de cámaras y sensores. Se asume que los agentes
pueden acceder a toda la información del ambiente. Esta información incluye, normalmente, la posición y orientación de cada robot y la posición de la pelota.
Los robots llevan la pelota a un objetivo determinado, posicionándose detrás de ella y dirigiéndose
al objetivo. No cuentan con un dispositivo para patear la pelota, por lo tanto, la acción de patear es
realizada por el impacto en la misma.
Los equipos pueden contar con diferente cantidad de jugadores, dependiendo de las reglas de la competencia. Se asumirá que los partidos son jugados por equipos de cinco jugadores, como en la categoría simulada Simurosot. Se trata lógicamente de un arquero y cuatro jugadores, los cuales pueden
tomar diferentes posiciones dentro del campo de juego dependiendo de la estrategia.
4. ANÁLISIS
El análisis constituye la segunda etapa de la metodología Gaia. La entidad más abstracta de la
jerarquía de análisis es el sistema. Esta entidad puede significar sociedad, organización o equipo dependiendo del dominio en que se esté trabajando. La idea de un sistema como una sociedad es un
buen ejemplo para pasar al próximo nivel de la jerarquía: roles (Figura 2). Puede parecer extraño, si
decimos que un sistema de computación ha sido definido mediante roles, pero la idea es más natural
cuando hablamos de una organización o sociedad.
En un equipo de fútbol pueden surgir varios roles, en relación a los puestos de los jugadores. Hay un
arquero, defensores y delanteros. Los objetivos y responsabilidades de cada rol son diferentes. Por
ejemplo, el delantero tiene por objetivo hacer goles y el defensor marcar a los delanteros del equipo
1590
Figura 2: Conceptos de la etapa de análisis
contrario. Un jugador en un momento dado está cumpliendo un rol dentro de la cancha, el cual puede
cambiar según la estrategia del equipo.
Un rol está definido por cuatro atributos: responsabilidades, permisos, actividades y protocolos. Las
responsabilidades determinan la funcionalidad y son el atributo clave asociado a cada rol. Las responsabilidades están divididas en dos tipos: propiedades livianas y propiedades seguras. Las propiedades
livianas describen que “algo bueno ocurre”. Estas definen ciertos asuntos que el agente debe realizar
en diferentes circunstancias del ambiente. Por ejemplo, una propiedad liviana para el delantero podría
ser: si el arco contrario está libre, entonces patear la pelota con dirección al arco contrario. En contraste, las propiedades seguras son invariantes que describen que “nada malo ocurre”. Por ejemplo, el
arquero tiene como propiedad segura que la pelota se encuentre fuera del arco propio.
Para cumplir con las responsabilidades, un rol tiene un conjunto de permisos. Estos determinan los
recursos disponibles, que comúnmente se trata de la información que el agente puede acceder o modificar.
Las actividades de un rol están asociadas a las acciones que puede llevar a cabo el agente por sí mismo, sin la interacción con otros agentes. Finalmente, un rol tiene un número de protocolos que definen
la forma en que este interactúa con otros roles.
La metodología en la etapa de análisis está organizada por dos modelos: el modelo de roles y el modelo de interacción.
El análisis es un proceso iterativo que está formado por 3 sub-etapas:
1. Identificación y definición de roles clave.
2. Modelo de interacción. Identificación de los protocolos asociados a cada rol.
3. Modelo de roles. Definición de responsabilidades, permisos y actividades de cada rol.
4.1. Identificación y definición de roles
Los roles en un equipo de fútbol son los puestos en que se desempeña un jugador y constituyen la
parte central de la estrategia de juego. Se diferencian dos roles claves: el arquero y los jugadores. Se
identifican solo dos roles porque el objetivo de este análisis es obtener un rol básico sin hacer mucho
hincapié en el comportamiento específico de un puesto (como delantero izquierdo, mediocampista
1591
central, líbero, enganche, etc.).
El arquero es un rol individual, el cual puede ser representado por un solo agente por vez. Este es el
principal encargado proteger el arco propio.
El rol de jugador puede ser cumplido por más de un jugador, dependiendo de la estrategia. En nuestro
caso, el rol es cumplido por el resto de los jugadores. El objetivo de este rol es mostrar un comportamiento básico de un jugador, pero con la primera premisa de hacer goles en el arco contrario.
4.2. Modelo de interacción
El modelo de interacción describe las dependencias, relaciones y protocolos que hay entre los
roles. La interacción entre los agentes puede realizarse a través del ambiente en el cual se encuentran
o directamente a través de un lenguaje compartido. En el equipo, las interacciones entre los jugadores
son a través del ambiente, por los movimientos que realizan dentro de la cancha. No hay un lenguaje
compartido a través de mensajes entre los jugadores del mismo equipo, sino que interaccionan a través
del juego en sí. Juegan al fútbol como una forma de comunicarse. En este caso particular, el modelo
de interacción define la estrategia de juego. La estrategia es compartida por todos los jugadores del
equipo [3].
El equipo consta de cinco jugadores; un arquero y cuatro jugadores. El arquero debe mantener una
posición cercana al arco. Luego, los cuatro jugadores se deben distribuir en la cancha y cumplir un
rol en particular. Se elige jugar con un jugador en cada cuadrante para abarcar toda la cancha con la
misma cantidad de jugadores.
Figura 3: Estrategia del equipo
Como se observa en la Figura 3, el equipo está formado por un arquero, un defensor derecho, un
defensor izquierdo, un delantero derecho y un delantero izquierdo. Cada uno de estos tiene una zona
asignada, con el objetivo de no se superpongan e interfieran en el juego del otro. Uno de los principales
puntos de la estrategia es lograr un equilibrio para no ocasionar conflictos entre los propios jugadores
(Equilibrio de Nash [8]).
4.3. Modelo de roles
El modelo de roles se construye a partir de una especificación de cada uno de los roles, con sus
respectivos permisos, responsabilidades, protocolos y actividades.
La salida de esta etapa es un esquema para cada rol. Gaia define una notación para las propiedades
livianas y seguras, que para este trabajo no serán tenidas en cuenta. Esto se debe a que la notación no
es lo suficientemente expresiva como para representar las responsabilidades del sistema en cuestión.
Estas serán representadas directamente a través de lenguaje natural.
Se han definido dos roles: arquero y jugador que son representados por los cuadros 2 y 3, respectivamente. A continuación, realizamos una explicación general de los esquemas.
1592
Esquema Rol Arquero
Descripción Este rol es el encargado de proteger el arco propio. Atajar.
Protocolos y
Actividades
despejarPelota, irAPosicionBase, desbloquear, esperarPelotaEnArea
Permisos de
lectura
Jugadores, Pelota, AreaPropia, PuntoBase, ArcoPropio
Permisos de
escritura
Primitiva
Propiedades
Livianas
Si el Jugador se encuentra atascado entonces desbloquear
jugador
Si la Pelota se encuentra en el Area propia, despejarPelota.
Si la Pelota se dirige al AreaPropia, esperarPelotaEnArea.
Si la Pelota está fuera del AreaPropia y no va en direccion
a esta, irAPosicionBase
Propiedades
Seguras
Pelota se encuentra fuera del Arco propio
Cuadro 2: Esquema del rol arquero a nivel de análisis
Las actividades desbloquear, irAPosicionBase, esperarPelotaEnArea, llevarPelotaArcoContrario,
acompañarAlQueLlevaPelota y despejarPelota son las acciones de alto nivel que pueden realizar los
agentes. En cada ciclo de acción los agentes pueden optar por realizar alguna de estas acciones, las
cuales devuelven la correspondiente acción primitiva a seguir para llevar a cabo la acción.
Los permisos de lectura conforman toda la información a la que tiene acceso el agente. Esta consiste
de:
Jugadores: posición y orientación de cada uno de los jugadores.
Pelota: posición de la pelota.
DireccionPelota: dirección de la pelota.
AreaRol: define el área en donde se desenvuelve el rol. De esta forma, diferentes agentes pueden
cumplir el mismo rol pero en diferentes áreas.
PuntoBase: punto al cual se dirigirá el rol ante una determinada circunstancia.
ArcoPropio: define la ubicación del arco propio.
ArcoContrario: define la ubicación del arco contrario.
AreaPropia: define la ubicación del área del arco propio, que debería ser la misma que el área del
arquero.
Los permisos de escritura constituyen toda la información que puede ser modificada por los agentes.
Esta consiste de la primitiva que es definida por la correspondiente acción a seguir.
Las propiedades livianas están descriptas claramente en lenguaje natural y definen bajo qué circunstancias se ejecuta cada acción. Por último, las propiedades seguras definen que nada malo está pasando. Esto, en el contexto de un partido de fútbol, es mantener en cero el arco propio.
1593
Esquema Rol Jugador
Descripción Este rol es el encargado de hacer los goles en el arco contrario, presenta el comportamiento básico de un jugador.
Protocolos y
Actividades
irAPosicionBase, esperarPelotaEnArea, desbloquear, llevarPelotaArcoContrario, acompañarAlQueLlevaPelota
Permisos de
lectura
Jugadores, Pelota, DireccionPelota, AreaRol, PuntoBase,
ArcoContrario, ArcoPropio, AreaPropia
Permisos de
escritura
Primitiva
Propiedades
Livianas
Si el Jugador se encuentra atascado entonces desbloquear
Si el Jugador se encuentra en AreaPropia entonces irAPosicionBase
Si es el jugador más cercano a la Pelota, llevarPelotaArcoContrario.
Si la Pelota se encuentra en el AreaRol y no es el jugador
más cercano a la Pelota entonces acompañarAlQueLlevaPelota
Si la DireccionPelota apunta al AreaRol, esperarPelotaEnArea.
Si la Pelota se encuentra fuera del AreaRol, si la DireccionPelota no apunta al AreaRol y no es el jugador más
cercano a la Pelota, entonces irAPosicionBase
Propiedades
Seguras
La Pelota se encuentra fuera del ArcoPropio.
Cuadro 3: Esquema del rol jugador a nivel de análisis
5. DISEÑO
El principal objetivo del proceso de diseño clásico, es transformar el modelo abstracto logrado por
el análisis, en un modelo con el suficiente nivel de abstracción como para que pueda ser implementado directamente. Este no es el caso de Gaia, porque el diseño debe tener un nivel de abstracción para
aplicar las técnicas tradicionales de diseño de agentes.
El diseño está formado por tres modelos: el modelo de agente que identifica los diferentes tipos de
agentes del sistema y la instanciación de los agentes en alguno de los tipos, el modelo de servicio que
identifica los servicios que son requeridos para realizar los roles de agentes y el modelo de comunicación que documenta las líneas de comunicación entre diferentes agentes.
5.1. Modelo de agente
El modelo de agente identifica los tipos de agentes. Estos comúnmente tienen correspondencia
uno a uno con los roles definidos en la etapa de análisis. Este modelo también especifica la cantidad
de agentes que instanciarán en cada rol.
Los tipos de agentes en este sistema son representados por los roles de la etapa de análisis. Los tipos
de agentes son arquero y jugador.
1594
La cantidad de agentes que instanciarán en cada rol define la estrategia de juego. La cantidad de
agentes está limitada a cinco, por lo cual no puede haber más de cinco agentes que cumplan con un
mismo rol. La instanciación de los jugadores a los roles está representada en la Figura 3.
arquero 1−→ agente arquero = jugador número 1 (keñi)
jugador 1−→ agente defensor derecho = jugador número 2 (epu)
jugador 1−→ agente defensor izquierdo = jugador número 3 (küla)
jugador 1−→ agente delantero derecho = jugador número 4 (meli)
jugador 1−→ agente delantero izquierdo = jugador número 5 (kechu)
Para darle un tono autóctono al trabajo, para los nombres de los jugadores se ha utilizado la traducción de los números a la lengua mapuche. El rol de arquero es instanciado solo por el agente keñi.
El rol de jugador es instanciado por cuatro agentes: epu el defensor derecho, küla el defensor izquierdo, meli el delantero derecho y kechu el delantero izquierdo. Los cuatro agentes tienen el mismo
comportamiento pero en diferentes zonas. Estas zonas dividen el campo de juego en cuatro.
5.2. Modelo de servicio
Este modelo define los servicios asociados a cada rol. Estos tienen comúnmente una correspondencia con las acciones de la etapa de análisis. La salida de esta etapa es una descripción de las
propiedades de cada servicio. Estas son: las entradas, las salidas, las pre-condiciones y las poscondiciones. Se describen seis servicios: desbloquear, despejar pelota, esperar pelota en área, llevar
pelota a arco contrario, acompañar al que lleva la pelota e ir a posición base. Cada uno de estos tiene
una relación directa con las acciones definidas en el modelo de interacción. El modelo está descripto
en el Cuadro 4.
5.3. Modelo de comunicación
Aquí se establecen las relaciones entre los roles definidas por los protocolos. La salida de este
modelo es un grafo dirigido formado por nodos que representan a los roles y arcos de la forma a −→ b,
que representan que el rol a envía mensajes al rol b.
En el sistema actual, los agentes no interaccionan a través de mensajes y por ello este modelo no tiene
sentido. Las relaciones entre los roles están definidas en el modelo de interacción del apartado 4.2,
que describe la estrategia del equipo lo suficiente, como para ser implementada.
6. CONCLUSIONES Y TRABAJOS FUTUROS
En este trabajo hemos presentado el uso de la metodología Gaia, describiendo el análisis y diseño
de un equipo de fútbol con robots. La obtención del documento de análisis, sirvió de base para la
construcción del equipo de fútbol Rakiduam que participó en la categoría Simurosot del CAFR 2006
[1, 6]. El documento de análisis inicial fue modificado incluso durante la competencia para realizar cambios en las estrategias de juego. Una de las principales modificaciones que surgieron fue la
asignación dinámica de roles, que no había sido tenida en cuenta inicialmente.
La posibilidad de división de roles y el modelo de servicios, permite dividir el proceso implementación
en subsistemas, que pueden ser desarrollados en forma paralela. De esta forma, varios analistas
pueden trabajar al mismo tiempo, reduciendo el tiempo de implementación.
1595
Servicio desbloquear
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para desbloquear al jugador
Entrada Jugador
Salida Primitiva
Pre-condiciones true
Pos-condiciones true
Servicio despejar pelota
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para que el
agente lleve la Pelota lo mas rápido fuera del AreaRol
Entrada Jugadores, Pelota, AreaRol
Salida Primitiva
Pre-condiciones La Pelota se encuentra en el AreaRol
Pos-condiciones true
Servicio esperar pelota en área
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para que el
agente espera la Pelota en los límites del AreaRol
Entrada Jugadores, Pelota, AreaRol, DirPelota
Salida Primitiva
Pre-condiciones La Pelota no se encuentra en el AreaRol y la DireccionPelota
apunta al AreaRol
Pos-condiciones true
Servicio llevar pelota a arco contrario
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para que el
agente lleve la Pelota al ArcoContrario
Entrada Jugadores, Pelota, ArcoContrario
Salida Primitiva
Pre-condiciones true
Pos-condiciones true
Servicio acompañar al que lleva la pelota
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para que el
agente acompañe al jugador que lleva la Pelota
Entrada Jugadores, Pelota, ArcoContrario
Salida Primitiva
Pre-condiciones true
Pos-condiciones true
Servicio ir a posición base
Descripción Este servicio devuelve la próxima Primitiva a ejecutar para que el
agente lleve se mueva al PuntoBase
Entrada Jugadores, Pelota, PuntoBase
Salida Primitiva
Pre-condiciones true
Pos-condiciones true
Cuadro 4: Modelo de servicios
1596
Uno de los objetivos propuestos para el futuro, es trabajar en conjunto con la cátedra de Inteligencia
Artificial, utilizando la interfaz entre Prolog y el simulador de fútbol con robots [5], en la práctica del
próximo cursado de la materia. Concretamente, los alumnos aplicarán las técnicas aprendidas durante
el cursado, en un práctico que consiste en el desarrollo de un equipo de fútbol.
