Estudio del desempeño de OLSR en una red mallada inhalámbrica en un escenario real
﻿ El objetivo de este trabajo es analizar el comportamiento del protocolo 
OLSR sobre una red mallada configurada con firmware OpenWrt utilizando distintos 
equipos de hardware. Se presentan los resultados empíricos de varias pruebas 
utilizando el mismo escenario. El escenario que se presenta es una red de mundo real 
(no de laboratorio) con pruebas reales y no simulaciones. OpenWrt  es un software 
perfectamente válido que puede ser utilizado en una gran variedad de dispositivos y su 
configuración para utilizarlo con protocolo OLSR es sencilla de realizar y no presenta 
problemas de funcionamiento con dicho protocolo.  
Keywords: Redes Malladas Inalámbricas, Redes Mesh, Protocolos, OLSR, OpenWrt. 
1   Introducción 
El objetivo de este trabajo es analizar el comportamiento del protocolo OLSR sobre una red 
mallada configurada con firmware OpenWrt utilizando distintos equipos de hardware. 
Las redes malladas inalámbricas (Wireless Mesh Networks) han tenido un gran éxito en 
la historia de las ciencias de la computación y de la ingeniería. Sus aplicaciones son 
numerosas en el dominio industrial, militar y comercial. Son en particular un dominio 
rápidamente creciente y esto trae muchos desafíos. En particular, un desafío difícil e 
inmediato es el enrutamiento efectivo debido a la volatilidad típica de tráfico en topologías 
complejas. Muchos estudios han intentado resolver el problema de enrutamiento mediante 
métodos heurísticos, pero este enfoque no proporciona los límites de cuán bien se asignan 
los recursos.  Sin embargo, este tipo de investigación generalmente asume que el tráfico de 
demandas de la red es estático y conocido de antemano. Como resultado, estos algoritmos 
tienden a sufrir un desempeño pobre. De hecho, trabajos recientes han demostrado que el 
tráfico inalámbrico es muy variable y difícil de caracterizar. Comprender el impacto de la 
incertidumbre de la demanda en el ruteo y el diseño de algoritmos de enrutamiento para 
proporcionar robustez, es relativamente un problema de investigación aún incipiente.  
Las redes Mesh abiertas son redes ad-hoc descentralizadas que no se basan en 
infraestructuras previas, como routers o puntos de acceso. En su lugar, cada nodo participa 
en el enrutado, siendo él mismo un router y enviando datos de otros, y de ese modo la 
determinación de las rutas se hace dinámicamente, basándose en la conectividad que va 
surgiendo. Para ello, necesitan de protocolos que viabilicen ese comportamiento. 
Es de suma importancia el análisis de la perfomance de diferentes protocolos de 
comunicación que deben interactuar con diversos dispositivos que hacen al enlace de los 
1066
nodos de la red a los fines de establecer la integración tecnológica disponible. No menos 
importante es la determinación de la relación costo/beneficio de una determinada 
implementación. El conocimiento en tiempo real de la configuración topológica de la red, 
mediante el uso de distintas herramientas de hardware y software, nos permite el monitoreo 
del comportamiento y sus alcances. Todo ello posibilita optimizar la red para que brinde un 
mejor servicio. En general, la optimización se basa en lograr el mejor camino para enrutar 
los paquetes de datos, sin demoras o con una demora mínima en función de lograr un mejor 
aprovechamiento de los recursos utilizados.  
En la Sección 2 se presentan algunos conceptos básicos sobre redes malladas y 
protocolos de ruteo. En la Sección 3 se describe el escenario, hardware y software 
utilizados. En la Sección 4 las pruebas realizadas. Finalmente, se presentan las 
conclusiones. 
2   Conceptos Básicos 
Una Red Mallada Inalámbrica (Mesh) es una red compuesta por nodos organizados en una 
topología de malla. Son redes en las cuales la información es pasada entre nodos en una 
forma de todos contra todos y en una jerarquía plana, en contraste a las redes centralizadas. 
Toda variación no prevista en el diseño, puede cambiar su topología, afectar a la 
distribución de carga de la red y al rendimiento general [1].  
Las ventajas que presenta frente a otras redes son el bajo costo al utilizar enlaces 
inalámbricos, la facilidad de aumentar el área de cobertura incluyendo nuevos nodos, ya no 
es necesario cambiar infraestructuras como en el caso de las redes cableadas, la robustez 
que presenta ante fallos al disponer de rutas alternativas y la capacidad de transmisión que 
permiten aplicaciones a los usuarios en tiempo real de voz, video y datos. Por tanto se 
puede incluir un nuevo nodo en cualquier momento y lugar. Como consecuencia el costo de 
este tipo de redes inalámbricas es mucho menor que en las redes cableadas, ya que no hay 
que invertir en materiales de cableado y en estudios enfocados a la unión más óptima de los 
nodos. En la realidad, la topografía raramente viene en forma de anillo, línea recta o 
estrella. En terrenos difíciles, sean remotos, rural o urbano, donde no todos los usuarios ven 
uno o algunos puntos centrales, lo más posible es que el usuario solo vea a uno o más 
usuarios vecinos.  
En una red mallada un conjunto de nodos se comunican entre sí de manera directa 
transmitiendo la información de nodo a nodo hasta que llega a su destino final. La 
información atraviesa múltiples saltos y no hay necesidad de una unidad centralizada que 
controle el modo de transmisión. La comunicación se realiza entre los nodos directamente. 
Cada nodo puede ser origen y destino de los datos o encaminar la información de otros 
nodos. Las redes malladas inalámbricas son robustas al tener varios caminos disponibles 
entre el nodo origen y el destino, de modo que el servicio no se ve afectado por la caída de 
un nodo o por la ruptura de un enlace.  
Dado que la forma de operar que tienen estas redes consiste en que los datos pasan de un 
nodo a otro hasta que llegan a su destino, los algoritmos de ruteo dinámico necesitan que 
cada nodo comunique información de ruteo a otros nodos en la red. Cada nodo determina 
qué hacer con los datos que recibe, ya sea pasarlos al próximo nodo o quedárselos, 
dependiendo del protocolo utilizado. El algoritmo de ruteo usado siempre debería asegurar 
que la información tome el camino más apropiado de acuerdo a una métrica. Una métrica es 
1067
el valor por el cual los protocolos determinan cuál ruta tomar o con cuál nodo comunicarse. 
Una de las debilidades y limitaciones de las redes Mesh es la latencia (el retardo de 
propagación de los paquetes), que crece con el número de saltos. Los efectos del retardo 
son dependientes de la aplicación. Por ejemplo los correos electrónicos no son afectados 
por grandes latencias, mientras que los servicios de voz son muy sensibles a los retardos. 
Otra debilidad es la disminución del rendimiento en todas las redes multisalto, esto es, a 
mayor número de saltos, se tiene menor rendimiento.   
Con respecto al hardware, prácticamente cualquier nodo inalámbrico puede convertirse 
en un nodo Mesh simplemente mediante modificaciones de software. 
 
Protocolos de Encaminamiento 
La principal función de los protocolos de encaminamiento es seleccionar el camino entre el 
nodo fuente y destino de una manera rápida y fiable. Las redes malladas inalámbricas 
pueden utilizar los protocolos de encaminamiento de otras redes ya existentes, pero 
modificándolos para que funcionen correctamente con ellas. Si se elige esta opción, el 
protocolo de encaminamiento modificado debe asegurar las principales características que 
son el número de saltos, el rendimiento, la tolerancia a fallos, el equilibrado de carga, la 
escalabilidad y el soporte adaptativo.  
Otra opción es diseñar un nuevo protocolo de encaminamiento para las redes malladas 
inalámbricas. Esta solución es más costosa ya que cuando se desarrolla un nuevo protocolo 
hay que probarlo, modificarlo y solucionar los fallos. Por tanto el tiempo de realización es 
mayor que si nos centramos en un protocolo ya experimentado. 
En este trabajo utilizamos el protocolo OLSR para el encaminamiento en la red mesh 
dado que es uno de los más difundidos en este tipo de redes inalámbricas, a continuación 
una breve reseña. 
OLSR: Optimized Link State Routing Protocol ([2], [3]) es un protocolo proactivo que se 
basa en el estado de los enlaces. Se utiliza la técnica MPR (Multipoint Relaying) que 
consiste en elegir un conjunto de nodos vecinos que cubran el acceso de nodos distantes a 2 
saltos o más. Se adapta bien en redes con un gran número de nodos y de alta movilidad. El 
formato del paquete es igual para todos los datos del protocolo, así es fácil la extensión del 
mismo. Para saber el estado de un enlace se envían mensajes de  HELLO. Cada nodo tiene 
asociado a cada vecino el estado del enlace. Cuando un nodo detecte la aparición de un 
nuevo vecino se debe incluir una nueva entrada a la tabla de encaminamiento e incluir el 
estado del enlace. Además si se detecta una variación en el estado de un enlace, se debe 
comprobar en la tabla de encaminamiento que el cambio ha sido reflejado. Si no se recibe 
información de un enlace durante un tiempo determinado se elimina de la tabla de 
encaminamiento el enlace y el vecino correspondiente. Para calcular las rutas, cada nodo 
contiene una tabla de encaminamiento con el estado del enlace y el nodo. El estado del 
enlace se mantiene gracias al intercambio de mensajes periódicos. La tabla de 
encaminamiento se actualiza si se detecta algún cambio en el campo de enlace, de vecino, 
de vecino de dos saltos o en la  topología. 
 
1068
3   Escenario y Tecnologías Utilizadas 
Se montó una red experimental distribuida en tres edificios del campus de la Universidad a 
los efectos de tener un campo de pruebas más parecido a la realidad de las redes mesh. En 
la Figura 1 se muestra la distribución del equipamiento y métricas del protocolo OLSR. 
Al momento de montar la red mesh, se realizó un análisis del campo electromagnético en 
la frecuencia 2.4 ghz. Para esto se utilizó un analizador de frecuencia de Ubiquiti AirView2 
ext. Se detectó que el canal 11 no estaba siendo utilizado por la red inalámbrica de 
infraestructura. A raíz de esto se eligió esta frecuencia para la red mesh. 
 
Fig. 1. Escenario 
Tabla 1. Hardware utilizado. 
 
1069
En el montaje de esta red se utilizaron equipos de las marcas Linksys (WRT54GL), 
Ubiquiti (Nonostation 2, Nanostation Loco M2), TP-Link (TL-WR743ND, TLWR842ND) 
como se muestra en la Tabla 1. Se eligieron por la gran popularidad y su bajo precio. 
 
Se utilizó como sistema de operativo OpenWrt [4] que es una distribución de Linux usada 
para dispositivos embebidos tales como routers personales. El soporte fue limitado 
originalmente al modelo Linksys WRT54G, pero desde su rápida expansión se ha incluido 
soporte para otros fabricantes y dispositivos. OpenWrt utiliza principalmente una interfaz 
de línea de comando, pero también dispone de una interfaz web en constante mejora. El 
soporte técnico es provisto como en la mayoría de los proyectos de Software Libre, a través 
de foros y su canal IRC. El desarrollo de OpenWrt fue impulsado inicialmente gracias a la 
licencia GPL, que obligaba a todos aquellos fabricantes que modificaban y mejoraban el 
código, a liberar éste y contribuir cada vez más al proyecto en general.  
Como se puede ver en la tabla de dispositivos se utilizaron distintas versiones de SO: 
- OpenWrt en su versión 10.03.1, que es la estable más reciente, solamente con el 
agregado del protocolo OLSR versión 0.6.1-3 que es la que viene standart con esa versión 
de openwrt 
- Freifunk [5] que es una adaptación basada en OpenWrt hecha por grupos de usuarios 
alemanes que la utilizan para el montado de redes mesh en varias ciudades de ese país. Este 
sistema operativo presenta varias adaptaciones específicas para redes mesh y entre ellas una 
muy útil como es la graficación de los enlaces de toda la red y los valores de las métricas de 
OLSR para cada una como se puede ver en la Figura 1, viene instalada por defecto. La 
versión de OLSR es la 0.6.0. 
Commotion [6] es otra adaptación de OpenWrt hecha especialmente para montado plug and 
play de redes mesh. Está basada en las últimas versiones de OpenWrt (10.03 en adelante) y 
para ser usada principalmente en equipos Ubiquiti de la serie M. Al igual que Freifunk (de 
hecho muchas aplicaciones vienen de esta distribución) presenta varias herramientas y 
utilidades para el análisis y la visualización del comportamiento de la red. También utiliza 
protocolo OLSR por defecto en su versión 0.6.5.4. Si uno no utiliza las configuraciones por 
defecto para el armado de la mesh presenta algún grado de dificultad para realizar la 
configuración que uno desee. 
En todas estas versiones de OpenWrt se utilizaron las versiones de OLSR que se instalan 
por defecto desde los repositorios. 
Todas estas versiones de OpenWrt utilizan un interface web que permite la configuración 
de todas las opciones para que la mesh funcione. 
4 Pruebas realizadas 
Utilizando el escenario, se realizaron pruebas para medir la efectividad del protocolo. En la 
ejecución de estas pruebas se utilizó el camino formado por los nodos 20, 7, 9, 16 y 14. Las 
métricas de rendimiento son: El tiempo de ida y vuelta (Round-trip time - RTT), Jitter, la 
probabilidad de error y testeo de ancho de banda.  
RTT: es el tiempo que le lleva a un paquete alcanzar un nodo remoto y regresar.  Está 
relacionado con la latencia de la conexión. Cuanto más bajo es el RTT, mejor es la 
conexión. 
1070
Jitter: es la variación en la latencia de paquetes recibidos de un nodo remoto. Cuanto más 
bajo es, mejor conexión. Es importante cuando se utiliza aplicaciones de voz sobre IP. 
Probabilidad de error: Los errores en una red causan que los paquetes se pierdan, 
corrompan, se dupliquen o queden fuera de servicio. Cuando ocurre un error es importante 
saber la probabilidad con la que suceden y el tiempo entre ellos. Lo ideal es no tener 
errores, pero una tasa baja es aceptable. 
Ancho de banda: es la tasa de transmisión de un enlace o sistema de transporte de datos 
y se puede definir como la capacidad de un enlace o sistema para transmitir datos. Se 
expresa en bit por segundo. 
Nuestra herramienta principal de testeo fue iperf para todas las métricas a excepción de 
RTT, que se midió con ping. Iperf es una herramienta que se utiliza para hacer pruebas en 
redes informáticas. El funcionamiento habitual es crear flujos de datos TCP y UDP y medir 
el rendimiento de la red.  Iperf permite al usuario ajustar varios parámetros que pueden ser 
usados para hacer pruebas en una red o para optimizar y ajustar la red. Puede funcionar 
como cliente o como servidor y puede medir el rendimiento entre los dos extremos de la 
comunicación, unidireccional o bidireccionalmente. Es software de código abierto y puede 
ejecutarse en varias plataformas incluyendo Linux, Unix y Windows. Cuando se utiliza el 
protocolo UDP, Iperf permite al usuario especificar el tamaño de los datagramas y 
proporciona resultados del rendimiento y de los paquetes perdidos.  Cuando se utiliza TCP, 
Iperf mide el rendimiento de la carga útil. Típicamente la salida de Iperf contiene un 
informe con marcas de tiempo con la cantidad de datos transmitidos y el rendimiento 
medido. 
Para medir el valor de RTT se utilizó la herramienta ping.  Ping es el acrónimo de Packet 
Internet Groper, que significa "Buscador o rastreador de paquetes en redes". Es un utilitario 
que analiza el estado de la comunicación entre un host local y uno o varios remotos por 
medio del envío de paquetes. Se utiliza para  diagnosticar el estado, velocidad y calidad de 
una red determinada. En nuestras pruebas siempre se utilizó como tamaño de paquete 1016. 
 
La Figura 2 muestra los resultados de RTT obtenidos utilizando el protocolo OLSR. Los 
resultados muestran un patrón donde RTT se incrementa con el número de saltos. 
 
 
1071
Fig. 2. Evaluación de Round-trip Time en OLSR  
La Figura 3 muestra los resultados de la variación del retardo (jitter) obtenidos. A medida 
que aumenta el número de saltos aumenta el valor de retardo  y el aumento se torna 
significativo para 3 y 4 saltos. 
 
Fig. 3. Evaluación de Jitter en OLSR  
La Figura 4 muestra los resultados de Probabilidad de error usando OLSR. Se observa  que 
la pérdida de paquetes crece  con el número de saltos y se vuelve significativa a partir de 3 
saltos.   
 
Fig. 4. Evaluación de la Probabilidad de Error en OLSR  
1072
La Figura 5 muestra los resultados obtenidos de las pruebas con TCP y UDP.  En ambos 
casos el comportamiento es similar. El ancho de banda sufre un decrecimiento a medida que 
se incrementa el número de saltos. 
 
 
Fig. 5. Evaluación del ancho de banda en OLSR con UDP y TCP 
Además, utilizando el mismo escenario, se realizaron pruebas para medir el tiempo de 
recuperación del protocolo cuando cae un nodo de la red y para medir el tiempo que tarda el 
protocolo en entrar en funcionamiento cuando se incorpora un nuevo nodo a la red. 
Para medir el tiempo de recuperación cuando cae un nodo de la red, se procedió al 
apagado del nodo 9 y se midió cuánto tiempo tardaba la red mallada en encontrar un 
camino alternativo. El promedio obtenido fue de 25,63 segundos. 
Para medir el tiempo de arranque, se apagó el nodo 14, luego se volvió a arrancar este 
nodo registrando la hora de encendido. Este procedimiento se realizó ejecutando un script 
para evaluar cuantos segundos demoraba en re arrancar. Se tomó la hora de la ejecución del 
primer ping inalcanzable y luego la hora del primer 0% paquetes perdidos. El promedio 
obtenido fue de 42,46 segundos.  
Para complementar las pruebas con servicios reales se montaron sobre la red mesh, una 
central telefónica IP Elastix con cinco teléfonos internos: tres internos utilizando un ATA 
(Linksys phone adapter PAP2-NA) y dos por medio de software cliente de centrales IP. 
También se montó una cámara IP sobre uno de los nodos más alejados. En estas pruebas 
(video y voz sobre IP) sobre la red se pudo visualizar un desempeño aceptable de la misma 
para dichos servicios aunque la aplicación de video no responde eficientemente a cambios 
bruscos. 
5 Conclusiones 
En este trabajo se presentó un estudio sobre el rendimiento del protocolo OLSR. Se 
presentaron los resultados empíricos de varias pruebas utilizando el mismo escenario. El 
escenario que se presenta es una red de mundo real (no de laboratorio) con pruebas reales y 
1073
no simulaciones. Cuando se trata con este tipo de entornos, los experimentos son cada vez 
más difíciles de repetir en forma exacta al anterior.  
Por lo observado se confirma que el rendimiento de la red decrece con el número de 
saltos. Su valor, que en nuestro caso es bajo para cuatro saltos, depende mucho de la 
ubicación y la conectividad entre dispositivos, como así también de la actividad 
radioeléctrica circundante. 
A la luz de los resultados hay algunos descubrimientos interesantes: a) OpenWrt  es un 
software perfectamente válido que puede ser utilizado en una gran variedad de dispositivos 
y b) su configuración para utilizarlo con protocolo OLSR es sencilla de realizar y no 
presenta problemas de funcionamiento con dicho protocolo.   
Ex-profeso se utilizó hardware variado para demostrar que se puede realizar una mesh 
con los dispositivos disponibles en mercado (como los TP-LINK) e incluso algunos más 
antiguos, como es el caso de los Linksys WRT54GL. De todas maneras en el  relevamiento 
de redes existentes realizado y en el grado de desarrollo de los firmware, se pudo observar 
que los equipos más utilizados son las distintas versiones de Nanostation de la marca 
Ubiquiti.  
Las pruebas con servicios reales sobre la red no tienen rigor de investigación y fueron 
hechas a los efectos de visualizar en forma sencilla el comportamiento de la red y la validez 
de la provisión de estos servicios sobre la misma. 
Cabe aclarar que por tratarse de una red montada sobre un escenario real y no de 
laboratorio hemos tenido que escoger adecuadamente los horarios de realización de las 
pruebas dado que las otras redes inalámbricas instaladas en el edificio y la circulación de 
personas tienen una marcada influencia en el funcionamiento de la red mallada. 
